{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "(SO0001) - DMVPN Transit VPC: This template enable DMVPN in transit VPC",

  "Parameters" : {
    "CreateDeleteTunnel" : {
      "Description" : "Create or Delete DMVPN tunnel.",
      "Type" : "String",
      "Default" : "Create",
      "AllowedValues" : ["Create", "Delete"]
    }, 
    "HubSpokeProfile" : {
      "Description" : "Transit VPC-DMVPN profile.",
      "Type" : "String",
      "Default" : "Spoke-to-OneHub-EIGRP",
      "AllowedValues" : ["Spoke-to-OneHub-EIGRP", "Spoke-to-MultiHub-EIGRP"]
    }, 
    "IpsecCipher" : {
      "Description": "IPSEC Cipher Algorithm",
      "Type" : "String",
      "Default" : "ESP-AES",
      "AllowedValues" : ["ESP-AES", "ESP-GCM", "ESP-GMAC", "ESP-3DES", "ESP-DES" ]
    }, 
    "IpsecAuthentication" : {
      "Description": "IPSEC Authentication Alogrithm",
      "Type" : "String",
      "Default" : "ESP-SHA256-HMAC",
      "AllowedValues" : ["ESP-SHA-HMAC", "ESP-SHA256-HMAC", "ESP-SHA384-HMAC", "ESP-SHA512-HMAC"]
    }, 
    "TransitVPCS3Bucket" : {
      "Description" : "S3 bucket of the existing Transit VPC.",
      "Type" : "String",
      "Default" : ""
    },
    "S3Prefix" : {
      "Description" : "S3 prefix to append before S3 key names.",
      "Type" : "String",
      "Default" : "vpnconfigs/"
    },
    "DMVPNHubIp1": {
        "Description" : "DMVPN Hub's routable IP address. (OPTIONAL: Use only for Transit VPC as Spoke or Multi-Hub)",
        "Type" : "String",
        "Default" : ""
    },
    "DMVPNHubIp2": {
        "Description" : "2nd DMVPN Hub's routable IP address. (OPTIONAL: Use only for Transit VPC as Spoke with HA or Multi-Hub)",
        "Type" : "String",
        "Default" : ""
    },    
    "DMVPNSpokeTunnelIp1" : {
        "Description" : "Spoke DMVPN Tunnel IP address.",
        "Type" : "String",
        "Default" : "10.101.0.3"
    },
    "DMVPNSpokeTunnelIp2" : {
        "Description" : "Spoke DMVPN Tunnel IP address.",
        "Type" : "String",
        "Default" : "10.101.0.4"
    },    
    "DMVPNHubTunnelIp1" : {
        "Description" : "CSR1 DMVPN hub Tunnel IP address.",
        "Type" : "String",
        "Default" : "10.101.0.1"
    },
    "DMVPNHubTunnelIp2" : {
        "Description" : "(optional) CSR2 DMVPN hub Tunnel IP address.",
        "Type" : "String",
        "Default" : ""
    },   
    "DMVPNTunnelIpCidr" : {
        "Description" : "DMVPN Tunnel CIDR.",
        "Type" : "String",
        "Default" : "10.101.0.0/16"
    },    
    "RoutingProtocolASN" : {
      "Description" : "AS number of routing protocol",
      "Type" : "String",
      "Default" : "10000"
    },
    "NHRPNetworkId" : {
      "Description" : "Network ID for NHRP protocol",
      "Type" : "String",
      "Default" : "9898"
    },
    "TunnelKey" : {
      "Description" : "Tunnel Key",
      "Type" : "String",
      "Default" : "10"
    },
    "SharedKey" : {
      "Description" : "ISAKMP shared key",
      "Type" : "String",
      "Default" : ""
    },
    "AuthString" : {
        "Description" : "Authentication string to use on an interface running NHRP",
        "Type" : "String",
        "Default" : "cisco123"
    }
  },
  "Metadata" : {
      "AWS::CloudFormation::Interface" : {
         "ParameterGroups" : [
         {
            "Label" : { "default":"Transit VPC Configuration" },
            "Parameters" : [ "HubSpokeProfile", "CreateDeleteTunnel", "TransitVPCS3Bucket", "S3Prefix" ]
         },
         {
            "Label" : { "default":"Configuration for Hub and Spoke DMVPN" },
            "Parameters" : [ "DMVPNTunnelIpCidr", "DMVPNHubTunnelIp1", "DMVPNHubTunnelIp2", "DMVPNHubIp1", "DMVPNHubIp2", "DMVPNSpokeTunnelIp1", "DMVPNSpokeTunnelIp2", "NHRPNetworkId", "AuthString", "TunnelKey", "RoutingProtocolASN"]
         },
         {
            "Label" : { "default":"IPSEC Algorithm Configuration:" },
            "Parameters" : [ "IpsecCipher", "", "IpsecAuthentication", "SharedKey"]
         }
         ],
         "ParameterLabels" : {
             "DMVPNHubIp1" : { "default" : "1st DMVPN Hub's IP address" },
             "DMVPNHubIp2" : { "default" : "2nd DMVPN Hub's IP address (optional) " },
             "DMVPNTunnelIpCidr" : { "default" : "DMVPN tunnel CIDR"},
             "HubSpokeProfile" : {"default" : "DMVPN Profile"}, 
             "DMVPNSpokeTunnelIp1" : { "default" : "1st DMVPN spoke tunnel IP address" },
             "DMVPNSpokeTunnelIp2" : { "default" : "2nd DMVPN spoke tunnel IP address" },
             "DMVPNHubTunnelIp1" : { "default" : "1st DMVPN Hub tunnel IP address" },
             "DMVPNHubTunnelIp2" : { "default" : "2nd DMVPN Hub tunnel IP address" },
             "IpsecCipher" : { "default" : "Choice of IPSEC cipher algorithm" },
             "IpsecAuthentication" : { "default" : "Choice of IPSEC authentication algorithm" },
             "RoutingProtocolASN" : { "default" : "AS number for BGP/EIGRP" },
             "NHRPNetworkId" : { "default" : "Network ID for NHRP Protocol" },
             "TransitVPCS3Bucket" : { "default" : "Transit VPC S3 Bucket" },
             "CreateDeleteTunnel" : {"default" : "Create or Delete"}, 
             "SharedKey" : {"default" : "Shared Key"},
             "TunnelKey" : {"default" : "Tunnel Key"},
             "S3Prefix" : { "default" : "Prefix for S3 Objects" }
         }
      }
  },
  "Mappings" : {
    "DmvpnProfile" : {
      "Spoke-to-MultiHub-EIGRP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Spokex-to-MultiHub-EIGRP.txt"},
      "Spoke-to-OneHub-EIGRP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Spokex-to-OneHub-EIGRP.txt"},
      "Hub-EIGRP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Hub-EIGRP.txt"},
      "Multi-Hub-EIGRP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Multi-Hub-EIGRP-Hubx.txt"},
      "Spoke-to-MultiHub-BGP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Spokex-to-MultiHub-BGP.txt"},
      "Spoke-to-OneHub-BGP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Spokex-to-OneHub-BGP.txt"},
      "Hub-BGP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Hub-BGP.txt"},
      "Multi-Hub-BGP" : {"ProfileName": "latest/transit-vpc/dmvpn-spoke/cisco-profile/Multi-Hub-BGP-Hubx.txt"}
    }
  },
  "Resources" : {
     "DMVPNConfigRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
             "AssumeRolePolicyDocument": {
                 "Version" : "2012-10-17",
                 "Statement": [ {
                   "Effect": "Allow",
                   "Principal": {
                     "Service": "lambda.amazonaws.com"
                   },
                   "Action": "sts:AssumeRole"
                 }]
             },
             "Path": "/"
         }
     },
     "DMVPNConfigRolePolicy" : {
         "Type": "AWS::IAM::Policy",
         "Properties": {
              "Roles" : [ { "Ref" : "DMVPNConfigRole" } ],
              "PolicyName": "DMVPN_Config_Permissions",
              "PolicyDocument": {
                 "Version" : "2012-10-17",
                 "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": ["logs:*", "logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                      "Resource": ["arn:aws:logs:*:*:*"]
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                        "ec2:CreateNetworkInterface",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DetachNetworkInterface",
                        "ec2:DeleteNetworkInterface"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": ["kms:Encrypt", "kms:Decrypt", "kms:ReEncrypt*", "kms:GenerateDataKey*", "kms:DescribeKey"],
                      "Resource": "*"
                   },
                   {
                      "Effect": "Allow",
                      "Action": ["s3:PutObject", "s3:PutObjectAcl", "s3:GetObject"],
                      "Resource": [
                        { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref" : "TransitVPCS3Bucket" }, "/", {"Ref": "S3Prefix"}, "*"]] },
                        "arn:aws:s3:::cisco-csr-tvpc-dmvpn/latest/transit-vpc/dmvpn-spoke/*"
                      ]
                   }

                  ]
              }
         }
     },
   "WaitForRoleLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
         "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
               "Effect": "Allow",
               "Principal": {
                  "Service": ["lambda.amazonaws.com"]
               },
               "Action": ["sts:AssumeRole"]
            }]
         },
         "Policies": [{
            "PolicyName": "LambdaCloudWatch",
            "PolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [{
                  "Effect": "Allow",
                  "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                  "Resource": { "Fn::Join" : ["", ["arn:aws:logs:",{"Ref" : "AWS::Region"},":",{ "Ref" : "AWS::AccountId" }, ":log-group:/aws/lambda/*" ]]}
               }
             ]
            }
         }]
      }
   },   
   "WaitLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
         "Code": {
            "ZipFile": {
               "Fn::Join": ["\n", [
               "import time",
               "import cfnresponse",
               "def handler(event, context):",
               "   time.sleep(20)", 
               "   responseData = {}",
               "   cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)"
               ]]
            }
         },
         "Handler": "index.handler",
         "MemorySize": "128",
         "Runtime": "python2.7",
         "Timeout": "300",
         "Role": {"Fn::GetAtt" : ["WaitForRoleLambdaExecutionRole", "Arn"]}
      }
   },
   "WaitForRole": {
      "Type": "Custom::LambdaCallout",
      "DependsOn" : "DMVPNConfigRolePolicy",
      "Properties": {
         "Description": "Sleep timer waiting for role propagation completion",
         "ServiceToken": {"Fn::GetAtt": ["WaitLambda", "Arn"]}
      }
   },          
     
     "DMVPNConfigFunct": {
         "Type": "AWS::Lambda::Function",
         "DependsOn" : "WaitForRole",
         "Properties": {
            "Handler": "dmvpn_config.lambda_handler",
            "Role": { "Fn::GetAtt" : [ "DMVPNConfigRole" , "Arn" ] },
            "Description": "DMVPN Configurator",
            "Code": {
              "S3Bucket": { "Fn::Join": ["", ["cisco-csr-tvpc-dmvpn-", {"Ref" : "AWS::Region"}]] },
              "S3Key": "latest/transit-vpc/dmvpn-spoke/dmvpn_config.zip"
            },
            "Runtime": "python2.7",
            "Timeout": "60"
         }
     },
     "DMVPNConfigFunctExec": {
        "Type": "Custom::LoadLambda",
        "Properties": {
          "ServiceToken": { "Fn::GetAtt" : ["DMVPNConfigFunct", "Arn"] },
          "Region": { "Ref": "AWS::Region" },
          "DMVPNParms" : { "Fn::Join": ["", [
                "{ 'DMVPNHubIp1' : '",{ "Ref" : "DMVPNHubIp1" },"', ",
                "'DMVPNHubIp2' : '",{ "Ref" : "DMVPNHubIp2" },"', ",
                "'DMVPNSpokeTunnelIp1' : '",{ "Ref" : "DMVPNSpokeTunnelIp1" },"', ",
                "'DMVPNTunnelIpCidr' : '",{ "Ref" : "DMVPNTunnelIpCidr" },"', ",
                "'DMVPNHubTunnelIp1' : '",{ "Ref" : "DMVPNHubTunnelIp1" },"', ",
                "'DMVPNHubTunnelIp2' : '",{ "Ref" : "DMVPNHubTunnelIp2" },"', ",
                "'RoutingProtocolASN' : '",{ "Ref" : "RoutingProtocolASN" },"', ",
                "'AuthString' : '",{ "Ref" : "AuthString" },"', ",
                "'CreateDeleteTunnel' : '",{ "Ref" : "CreateDeleteTunnel" },"', ",
                "'HubSpokeProfile' : '", { "Fn::FindInMap" : [ "DmvpnProfile", { "Ref" : "HubSpokeProfile" }, "ProfileName" ]},"', ",
                "'TransitVPCS3Bucket' : '",{ "Ref" : "TransitVPCS3Bucket" },"', ",
                "'S3Prefix' : '",{ "Ref" : "S3Prefix" },"', ",
                "'StackId' : '",{"Ref" : "AWS::StackId"},"', ",
                "'StackName' : '",{"Ref" : "AWS::StackName"},"', ",
                "'IpsecCipher' : '",{"Ref" : "IpsecCipher"},"', ",
                "'IpsecAuthentication' : '",{"Ref" : "IpsecAuthentication"},"', ",
                "'SharedKey' : '",{"Ref" : "SharedKey"},"', ",
                "'TunnelKey' : '",{"Ref" : "TunnelKey"},"', ",
                "'DMVPNSpokeTunnelIp2' : '",{ "Ref" : "DMVPNSpokeTunnelIp2" },"', ",
                "'NHRPNetworkId' : '",{ "Ref" : "NHRPNetworkId" },"' ",
                "}"
            ]] }
        }
     }
  },
  "Outputs" : {
      "DMVPNSpokeConfig" : {
          "Description" : "DMVPN Spoke Configuration",
          "Value" : "Success" 
      }
  }
}
